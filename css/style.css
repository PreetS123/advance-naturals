/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
:root {
  --global_color: #777;
  --light_green: #7ed56f;
  --medium_green: #55c57a;
  --dark_green: #28b485;
}
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}
html{
  font-size: 62.5%;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: var(--global_color);
  padding: 3rem;
  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 131, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);
  position: relative;
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}
.header__logo {
  height: 2.5rem;
}
.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}
.heading-primary {
  color: #fff;
  margin-bottom: 4rem;
  text-transform: uppercase;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  backface-visibility: hidden;
}

.heading-primary--main {
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 2rem;
  animation: 3s moveInLeft ease-out;
  /*
  animation-iteration-count:3;
  */
}
.heading-primary--sub {
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  animation: moveInRight 3s linear;
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem) rotate(0deg);
  }
  20% {
    opacity: 0.4;
    transform: translateX(-6rem);
  }
  40% {
    opacity: 0.6;
    transform: translateX(-4rem);
  }
  80% {
    opacity: 0.8;
    transform: translateX(-2rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  20% {
    opacity: 0.4;
    transform: translateX(8rem);
  }
  40% {
    opacity: 0.6;
    transform: translateX(6rem);
  }
  80% {
    opacity: 0.8;
    transform: translateX(2rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

/*Pseudo class element example: btn is a link tag so we are using like this*/
.btn:link,
.btn:visited {
  text-decoration: none;
  text-transform: uppercase;
  padding: 1.5rem 4rem;
  display: inline-block;/* If we need to apply transform property on a tag then display should be inline-block.*/
  border-radius: 10rem;
  transition: all 1s;
  position: relative;
  font-size: 1.6rem;
}
.btn:hover {
  transform: translateY(-0.5rem);
  box-shadow: 0 1rem 2rem  rgba(0,0,0,0.2);
}
.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0 0.5rem 1rem  rgba(0,0,0,0.2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

/*Pseudo element*/
.btn::after{
  content:"";
  display:inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s;
}

.btn--white::after{
  background-color: #fff;
}
.btn:hover::after{
  /*Scale just increase the size of the element*/
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}
.btn--animated{
  animation: moveToTop .5s ease-out .75s;
  animation-fill-mode: backwards;
}
@keyframes moveToTop {
  0% {
    opacity: 0;
    transform: translateY(5rem);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}